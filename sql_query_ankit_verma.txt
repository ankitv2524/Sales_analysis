        -- CREATE DATABASE
 -- create database noesys;
 
 -- USE DATABASE FOR CREATE TABLE 
use noesys;

-- CREATE TABLE AND CREATE COLUMNS INSIDE THE TABLE OF NOESYS DATABASE
-- CREATE TABLE IF NOT EXISTS scheme (
--     Plan_ID INT PRIMARY KEY,
--     PlanName VARCHAR(255),
--     UsageRateSlabs VARCHAR(255),
--     Use_ FLOAT
-- );

-- here we insert the data after creating the table but actually i add all the data to csv file and then load into the mysql workbench
-- INSERT VALUES INTO THE TABLE COLUMNS 
-- INSERT INTO scheme (Plan_ID, PlanName, UsageRateSlabs, Use_)
-- VALUES (1, 'Plan A', '10000,0.25|10000,0.20|10000,0.15|99999,0.10',33000),
-- (2, 'Plan B', '5000,0.30|10000,0.25|15000,0.20|25000,0.15|99999,0.10',33000),
-- (3, 'Plan C', '5000,0.25|10000,0.20|99999,0.15', 33000),
-- (4, 'Plan D', '99999,0.25', 33000),
-- (5, 'Plan E','25000,0.25|999999,0.20', 33000);

-- RETREIVE ALL THE DATA FOR TABLE
-- SELECT * FROM scheme;

-- THIS IS THE MAIN QUERY This SQL query calculates the bill value for each plan based on the given usage rate slabs and use.-- 
SELECT 
    Plan_ID, 
    PlanName, 
    UsageRateSlabs, 
    Use_,
    ROUND(
        CASE 
            -- Different cases are evaluated based on the number of slabs in UsageRateSlabs
                    WHEN LENGTH(UsageRateSlabs) - LENGTH(REPLACE(UsageRateSlabs, '|', '')) = 1 THEN
            -- Calculation for a Two slabs
            CASE 
                WHEN Use_ < SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) THEN
                    Use_ * SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', -1)
                ELSE
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', -1) +
                    GREATEST(0, Use_ - SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1)) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 2), ',', -1)
            END
        
        WHEN CHAR_LENGTH(UsageRateSlabs) - CHAR_LENGTH(REPLACE(UsageRateSlabs, '|', '')) = 2 THEN
            -- Calculation for a Three Slabs
            CASE 
                WHEN Use_ < SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) THEN
                    Use_ * SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', -1)
                ELSE
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', -1) +
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 2), '|', -1) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 2), ',', -1) +
                    GREATEST(0, Use_ - SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) 
                                     - SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 2), '|', -1)) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 3), '|', -1), ',', -1)
            END
        
        WHEN CHAR_LENGTH(UsageRateSlabs) - CHAR_LENGTH(REPLACE(UsageRateSlabs, '|', '')) = 3 THEN
            -- Calculation for a Four slabs
            CASE 
                WHEN Use_ < SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) THEN
                    Use_ * SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', -1)
                ELSE
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', -1) +
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 2), ',', 1) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 2), ',', -1) +
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 3), ',', 1) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 3), ',', -1) +
                    GREATEST(0, Use_ - SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) 
                                     - SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 2), ',', 1) 
                                     - SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 3), ',', 1)) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 4), ',', -1)
            END
        
        WHEN CHAR_LENGTH(UsageRateSlabs) - CHAR_LENGTH(REPLACE(UsageRateSlabs, '|', '')) = 4 THEN
            -- Calculation for a Five slabs
            CASE 
                WHEN Use_ < SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) THEN
                    Use_ * SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', -1)
                ELSE
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', 1) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 1), ',', -1) +
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 2), ',', 1) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 2), ',', -1) +
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 3), ',', 1) *
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 3), ',', -1) +
                    SUBSTRING_INDEX(SUBSTRING_INDEX(UsageRateSlabs, '|', 4), ',', 1)
                END
        END, 1) AS BillValue
FROM scheme;